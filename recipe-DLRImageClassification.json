{
  "RecipeFormatVersion": "2020-01-25",
  "ComponentName": "aws.greengrass.DLRImageClassification",
  "ComponentVersion": "2.1.8",
  "ComponentType": "aws.greengrass.generic",
  "ComponentDescription": "Sample recipe - Image classification inference using DLR and resnet50 default model.",
  "ComponentPublisher": "AWS",
  "ComponentConfiguration": {
    "DefaultConfiguration": {
      "accessControl": {
        "aws.greengrass.ipc.mqttproxy": {
          "aws.greengrass.DLRImageClassification:mqttproxy:1": {
            "policyDescription": "Allows access to publish via topic ml/dlr/image-classification.",
            "operations": [
              "aws.greengrass#PublishToIoTCore"
            ],
            "resources": [
              "ml/dlr/image-classification"
            ]
          }
        }
      },
      "ImageName": "cat.jpeg",
      "InferenceInterval": "3600",
      "PublishResultsOnTopic": "ml/dlr/image-classification",
      "ModelResourceKey": {
        "armv7l": "DLR-resnet50-armv7l-cpu-ImageClassification",
        "aarch64": "DLR-resnet50-aarch64-cpu-ImageClassification",
        "x86_64": "DLR-resnet50-x86_64-cpu-ImageClassification",
        "windows": "DLR-resnet50-win-cpu-ImageClassification"
      }
    }
  },
  "ComponentDependencies": {
    "variant.DLR.ImageClassification.ModelStore": {
      "VersionRequirement": ">=2.1.0 <2.2.0",
      "DependencyType": "HARD"
    },
    "variant.DLR": {
      "VersionRequirement": ">=1.6.5 <1.7.0",
      "DependencyType": "HARD"
    },
    "aws.greengrass.Nucleus": {
      "VersionRequirement": ">=2.0.0 <2.8.0",
      "DependencyType": "SOFT"
    }
  },
  "Manifests": [
    {
      "Platform": {
        "os": "linux",
        "architecture": "arm"
      },
      "Lifecycle": {
        "setEnv": {
          "DLR_IC_MODEL_DIR": "{variant.DLR.ImageClassification.ModelStore:artifacts:decompressedPath}/{configuration:/ModelResourceKey/armv7l}",
          "DEFAULT_DLR_IC_IMAGE_DIR": "{artifacts:decompressedPath}/image_classification/sample_images/"
        },
        "run": {
          "RequiresPrivilege": "true",
          "script": "\n                                    . {variant.DLR:configuration:/MLRootPath}/greengrass_ml_dlr_venv/bin/activate\n                                    python3 {artifacts:decompressedPath}/image_classification/inference.py"
        }
      },
      "Artifacts": [
        {
          "Uri": "greengrass:u76F8gUDB5Tj-SdIALf-IWRBg1U4tbbX5gvLcAkbxck=/image_classification.zip",
          "Digest": "lb4azsp0uDeBl6sK/A4UlRDHbi/Zup6eqwIk81Dt35M=",
          "Algorithm": "SHA-256",
          "Unarchive": "ZIP",
          "Permission": {
            "Read": "OWNER",
            "Execute": "NONE"
          }
        }
      ]
    },
    {
      "Platform": {
        "os": "linux",
        "architecture": "amd64"
      },
      "Lifecycle": {
        "setEnv": {
          "DLR_IC_MODEL_DIR": "{variant.DLR.ImageClassification.ModelStore:artifacts:decompressedPath}/{configuration:/ModelResourceKey/x86_64}",
          "DEFAULT_DLR_IC_IMAGE_DIR": "{artifacts:decompressedPath}/image_classification/sample_images/"
        },
        "run": {
          "RequiresPrivilege": "true",
          "script": "\n                                    export PATH=\"{variant.DLR:configuration:/MLRootPath}/greengrass_ml_dlr_conda/bin:$PATH\"\n                                    eval \"$({variant.DLR:configuration:/MLRootPath}/greengrass_ml_dlr_conda/bin/conda shell.bash hook)\"\n                                    conda activate greengrass_ml_dlr_conda\n                                    python3 {artifacts:decompressedPath}/image_classification/inference.py"
        }
      },
      "Artifacts": [
        {
          "Uri": "greengrass:u76F8gUDB5Tj-SdIALf-IWRBg1U4tbbX5gvLcAkbxck=/image_classification.zip",
          "Digest": "lb4azsp0uDeBl6sK/A4UlRDHbi/Zup6eqwIk81Dt35M=",
          "Algorithm": "SHA-256",
          "Unarchive": "ZIP",
          "Permission": {
            "Read": "OWNER",
            "Execute": "NONE"
          }
        }
      ]
    },
    {
      "Platform": {
        "os": "linux",
        "architecture": "aarch64"
      },
      "Lifecycle": {
        "setEnv": {
          "DLR_IC_MODEL_DIR": "{variant.DLR.ImageClassification.ModelStore:artifacts:decompressedPath}/{configuration:/ModelResourceKey/aarch64}",
          "DEFAULT_DLR_IC_IMAGE_DIR": "{artifacts:decompressedPath}/image_classification/sample_images/"
        },
        "run": {
          "RequiresPrivilege": "true",
          "script": "\n                                    . {variant.DLR:configuration:/MLRootPath}/greengrass_ml_dlr_venv/bin/activate\n                                    TVM_TENSORRT_CACHE_DIR=/tmp python3 {artifacts:decompressedPath}/image_classification/inference.py"
        }
      },
      "Artifacts": [
        {
          "Uri": "greengrass:u76F8gUDB5Tj-SdIALf-IWRBg1U4tbbX5gvLcAkbxck=/image_classification.zip",
          "Digest": "lb4azsp0uDeBl6sK/A4UlRDHbi/Zup6eqwIk81Dt35M=",
          "Algorithm": "SHA-256",
          "Unarchive": "ZIP",
          "Permission": {
            "Read": "OWNER",
            "Execute": "NONE"
          }
        }
      ]
    },
    {
      "Platform": {
        "os": "windows",
        "architecture": "*"
      },
      "Lifecycle": {
        "setEnv": {
          "DLR_IC_MODEL_DIR": "{variant.DLR.ImageClassification.ModelStore:artifacts:decompressedPath}/{configuration:/ModelResourceKey/windows}",
          "DEFAULT_DLR_IC_IMAGE_DIR": "{artifacts:decompressedPath}/image_classification/sample_images/"
        },
        "run": {
          "RequiresPrivilege": "true",
          "script": "{variant.DLR:configuration:/WindowsMLRootPath}\\Library\\bin\\conda activate {variant.DLR:configuration:/WindowsMLRootPath}\\envs\\greengrass_ml_dlr_conda && python -u {artifacts:decompressedPath}/image_classification/inference.py"
        }
      },
      "Artifacts": [
        {
          "Uri": "greengrass:u76F8gUDB5Tj-SdIALf-IWRBg1U4tbbX5gvLcAkbxck=/image_classification.zip",
          "Digest": "lb4azsp0uDeBl6sK/A4UlRDHbi/Zup6eqwIk81Dt35M=",
          "Algorithm": "SHA-256",
          "Unarchive": "ZIP",
          "Permission": {
            "Read": "OWNER",
            "Execute": "NONE"
          }
        }
      ]
    }
  ],
  "Lifecycle": {}
}
